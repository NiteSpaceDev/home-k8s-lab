# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:C1SUhkzLd+vuL7m7I14pny3jOo8dGpI=,iv:4Yd3jb/yOI/XEn9rHxiDN65rhP3aXQNoAapQbXX/L5M=,tag:VuuC/WqydurW91I3nGxhGw==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:mLcTDGkoWPZKNgFewommudDWWXaLzY+bc9gIuBPQ2V/VuZgRJREI/zrbVSf+a4QmGo+sbxwvyNQTmSm0WM7TaFuRTuPh1yEftCyI8MdMUsq7Ejsf4k5lWuKvmwecL4NrDq4A6ypExCw7WDPb+6WvBivQ+z9UAa6ja0XT0OHb/eK4+3XUx/hncfySuV0CMlsnZGB4SkZtebNTHZBAh3qrH3vFUjgzXfj2K1J8zk9q32oe+3CrsJKjIvTeUnQkSzj4R0MrDSM2mGyOBV4ovQlG+Xt+SfZc0EtsnKIX4opIrD2cYxJsRZVOXiQz9jm1hoOi3Waa9ROI/TTWeYs5HjyDMxz1DUvmCwjcs33/eb/tUMX8X8cZFmU9HUwpjhStm3jxDUCqdEeSVMxQ3McfdSE9eh9IJJwwOwrC/YTKC/4/shY7zisvQ9CajT2ilnzywo/zkiXneT0O4HjY3c5mdCm+e4p8OWSNdaMoaTc2HtGG2mkuOPVkq1wZdDawitCM/MCihbD9E+RfFYTjQqnAXr4AaTItruD/C/qa9995vg0ZfE4OenSNmZEplsktQnd7kBfV1hIaqwf/Ez5RPtZvs1DRDp6wFvWjYvsaPV/CDpUbeCRv2xUQfHX3GRtZD0M9s1XHSxypVYfGJUMEIBS+wPMkl7SmSMB0Jo7dzI5u7KVv+2IzJyGYGr4aeOJTiCfGFuwITGkkuLCKFWHyAsXW7H0G7U5CHT0Gaab83rvh4aP82KfbXl5Xm9oUWlgQ4ACNSASaWZM3eUvqNkhUte3swjthPdDUp7HhNAnRiwskzoNza5vBxFafXqXNkl/CR4Q3GGW8Z0vfkKUI3KP9UqeVqY/xZZdE3ttPnWN0+aPX/cFi2DGQRHKf,iv:q5bFibg4epEQYDtYU7UO6qV2xGWxcv56M8YTbckWVBQ=,tag:keYUKnkD+CToYY3UUJ4cow==,type:str]
        key: ENC[AES256_GCM,data:55iIbjXfWDNnSFdKa47KiP/novzFp0zmy7DnSaLUSyHkYw6hgTxkaHCY4rhbY2llnczgWaVEutAR09bfQZ5HWFUnJ1xV1dPup5MRQ+5fHrr4Z/xFw3+Q17507dhO+Vgg+ExeWDYgM7aaaC6du7fMCv6ynlcK3S0M8uzJdYl+qKdc4/75wIj3tyCNCAPQMuS+n7670FG5YwCEX29ACvLmcFyhqwT5SES1UWt+93EwUWDEpZUS,iv:UmEQGlODBJLn6CufP+SnThLv7xJbtcCS6D5Bo2nE4O8=,tag:IXgiQ9QbHd/f+UE6hy1l3Q==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.33.4
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true
        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # # `interfaces` is used to define the network interface configuration.
        # interfaces:
        #     - interface: enp0s1 # The interface name.
        #       # Assigns static IP addresses to the interface.
        #       addresses:
        #         - 192.168.2.0/24
        #       # A list of routes associated with the interface.
        #       routes:
        #         - network: 0.0.0.0/0 # The route's network (destination).
        #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
        #           metric: 1024 # The optional metric for the route.
        #       mtu: 1500 # The interface's MTU.
        #       
        #       # # Picks a network device using the selector.
        #       # # select a device with bus prefix 00:*.
        #       # deviceSelector:
        #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        #       # deviceSelector:
        #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
        #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
        #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        #       # deviceSelector:
        #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
        #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.
        #       # # Bond specific options.
        #       # bond:
        #       #     # The interfaces that make up the bond.
        #       #     interfaces:
        #       #         - enp2s0
        #       #         - enp2s1
        #       #     # Picks a network device using the selector.
        #       #     deviceSelectors:
        #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
        #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
        #       #     mode: 802.3ad # A bond option.
        #       #     lacpRate: fast # A bond option.
        #       # # Bridge specific options.
        #       # bridge:
        #       #     # The interfaces that make up the bridge.
        #       #     interfaces:
        #       #         - enxda4042ca9a51
        #       #         - enxae2a6774c259
        #       #     # Enable STP on this bridge.
        #       #     stp:
        #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
        #       # # Configure this device as a bridge port.
        #       # bridgePort:
        #       #     master: br0 # The name of the bridge master interface
        #       # # Indicates if DHCP should be used to configure the interface.
        #       # dhcp: true
        #       # # DHCP specific options.
        #       # dhcpOptions:
        #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
        #       # # Wireguard specific configuration.
        #       # # wireguard server example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     listenPort: 51111 # Specifies a device's listening port.
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24
        #       # # wireguard peer example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
        #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24
        #       # # Virtual (shared) IP address configuration.
        #       # # layer2 vip example
        #       # vip:
        #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
        # # Used to statically set the nameservers for the machine.
        nameservers:
            - 192.168.4.181
            - 192.168.4.205
    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: factory.talos.dev/installer/62d764ce32db60e6a2420ce82e25d544dec5379d2b2eebb9a21479fa62425e83:v1.10.7
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
            forwardKubeDNSToHost: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
        # # Provides machine specific control plane configuration options.
        # # ControlPlane definition example.
        # controlPlane:
        #     # Controller manager machine specific configuration options.
        #     controllerManager:
        #         disabled: false # Disable kube-controller-manager on the node.
        #     # Scheduler machine specific configuration options.
        #     scheduler:
        #         disabled: true # Disable kube-scheduler on the node.
        # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
        # # nginx static pod.
        # pods:
        #     - apiVersion: v1
        #       kind: pod
        #       metadata:
        #         name: nginx
        #       spec:
        #         containers:
        #             - image: nginx
        #               name: nginx
        # # Allows the addition of user specified files.
        # # MachineFiles usage example.
        # files:
        #     - content: '...' # The contents of the file.
        #       permissions: 0o666 # The file's permissions in octal.
        #       path: /tmp/file.txt # The path of the file.
        #       op: append # The operation to use
        # # The `env` field allows for the addition of environment variables.
        # # Environment variables definition examples.
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: info
        #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
        #     https_proxy: http://SERVER:PORT/
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: error
        #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
        # env:
        #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
        # # Used to configure the machine's time settings.
        # # Example configuration for cloudflare ntp server.
        # time:
        #     disabled: false # Indicates if the time service is disabled for the machine.
        #     # description: |
        #     servers:
        #         - time.cloudflare.com
        #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
        # # Used to configure the machine's sysctls.
        # # MachineSysctls usage example.
        # sysctls:
        #     kernel.domainname: talos.dev
        #     net.ipv4.ip_forward: "0"
        #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
        # # Used to configure the machine's sysfs.
        # # MachineSysfs usage example.
        # sysfs:
        #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
        # # Machine system disk encryption configuration.
        # systemDiskEncryption:
        #     # Ephemeral partition encryption.
        #     ephemeral:
        #         provider: luks2 # Encryption provider to use for the encryption.
        #         # Defines the encryption keys generation and storage method.
        #         keys:
        #             - # Deterministically generated key from the node UUID and PartitionLabel.
        #               nodeID: {}
        #               slot: 0 # Key slot number for LUKS2 encryption.
        #               
        #               # # KMS managed encryption key.
        #               # kms:
        #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
        #         
        #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
        #         # cipher: aes-xts-plain64
        #         # # Defines the encryption sector size.
        #         # blockSize: 4096
        #         # # Additional --perf parameters for the LUKS2 encryption.
        #         # options:
        #         #     - no_read_workqueue
        #         #     - no_write_workqueue
        # # Configures the udev system.
        # udev:
        #     # List of udev rules to apply to the udev system
        #     rules:
        #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
        # # Configures the logging system.
        # logging:
        #     # Logging destination.
        #     destinations:
        #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
        #           format: json_lines # Logs format.
        # # Configures the kernel.
        # kernel:
        #     # Kernel modules to load.
        #     modules:
        #         - name: brtfs # Module name.
        # # Configures the seccomp profiles for the machine.
        # seccompProfiles:
        #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
        #       # The `value` field is used to provide the seccomp profile.
        #       value:
        #         defaultAction: SCMP_ACT_LOG
        # # Override (patch) settings in the default OCI runtime spec for CRI containers.
        # # override default open file limit
        # baseRuntimeSpecOverrides:
        #     process:
        #         rlimits:
        #             - hard: 1024
        #               soft: 1024
        #               type: RLIMIT_NOFILE
        # # Configures the node annotations for the machine.
        # # node annotations example.
        # nodeAnnotations:
        #     customer.io/rack: r13a25
        # # Configures the node taints for the machine. Effect is optional.
        # # node taints example.
        # nodeTaints:
        #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: ENC[AES256_GCM,data:WO4qFS2cirg38eplakOtq//FNyzTMQ6FMAqjif+5uIm+74SPNCOx3LLbcHk=,iv:4GouwTht+C39XBjQVyivu4gq8S1CRpx5s4Zc8pY/hM0=,tag:ZHE5Npbcwr8rUr8rFUbVlQ==,type:str]
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:C067pLsEKOV5rUWf/xJZD/ms/VE8mXoACSFa7lc0j97ISkqP87iK0CL9HVI=,iv:tPegdQrbp6AEW2MUuojUenMwGFDgrHwVH31wijgdYU8=,tag:m+nH8yk4L9fz38MrDOuduA==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://olabtsuvm.nite.name:6443
    # Configures the cluster's name.
    clusterName: opilab
    # Provides cluster specific network configuration options.
    allowSchedulingOnControlPlanes: true
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:J7TFhUl+fp0jok7K9ivF1EPGJq5DAIE=,iv:xO/E740SqE8jO/y6qKZBc+b1Ppe9uq8JhF/ypHbmpz0=,tag:V8XdhYOqGUJdcRcABw5pEQ==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:aHyO1ADRV7SxqM5GhXyKpxnwfCXsgGEsE5axH/yJzV+YDU2OebNp7/yQEDE=,iv:gsDaO4KV3toDHdNZtv3tinXQvu+Nj7MRWRC6lG54JqQ=,tag:bllBHgWtX075AN1vSWWGsw==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:UXdRsJUQYfGrPIQ5UUEx2dlCjnfctg3qoLd93Qky9k9X6FBuPD0D0crR5WYhwtkYfZ+cvjq2pCk+e/GEtynJLTQMTIL8B9b1F8UP8QFJIocF3OUJfPGH3AeX75i/QWyL/3H+ldTasYSBkDOwS1kGD5mOqOEszpGmvCtp6RoU8D6PBnyohELrJHh1quJ5q4s9oVkn8zUYt93G+jWUA/mvzrjKnaB+AzuQKsKm0JGZrb+PsqhbijddqcDX8Lm6f01cgaWTku0znZw9qx9eL2XA2agBPY9iAU2kTaJZiI5kPU16ZlxbXFbFMSwFV8HXqwUDxzTOAPInMhSKj13RE9P17WgGSR0ZJMic3/A1KATV0vZsyRgMw9GwJoEjnYjgCmPOJOobDsLAkymZyDzXZg0Ee/su9/6N8KsEdezV19lFf4nMucIYC+mcVtT53JB9uDjxlaug9gmdE2n8ckmD8vpEB2hw+g6Jq5lNcVtdvzvfjghmWyIFZhxVAGySyIgyI/PYMGjuJ3wh7T2e6pUtEJBRS2PbQMUD5j5OZRmktCIlpm+Vbh3xabRZEncetEH8aNLbJhesvOWOvXNFqQFME1F3FM7nZqtn9eezv6W+7w/Ty908LgwlXbfo8SoNXgejX3B2rqfzuznbUye+SNDeNwCWMZvhAcaQIIDF+F02LGHJELFv+T5KxIvi67pUyuY0LLP7Np58+pnPHm7lNpL95Rs7/M5wzXNpJINBivXKSqICukVEWK8l8buRQDQDKhGYecuTlFlmHeuTklrBO1M4CDqaiWmNYRonUZLoYhJ9u8RhdglxdOCRq23TQ6BjE41jSFXq8mZvMOKL/fSVIpM5MlQ2rlUi23D34rHT4CiWs/ZBNnLZh6zTfbaPKkVWKfMvAQfTt5rtlQkqG1YijkRIqC96HhB621eW9Vzb4KFKvfhQ7UPpr7Z8fu/POGyVUo5TPQ1JAEZwQy4Ghk5kH93owTLdGJnI3o6unOid6l97G1VW6p7jW1QM9YL4JlNZtkZ0dDDhk9G0SXMdJKoohHbdDg/f9sZ+e+Wr1+zGi7AaZg==,iv:IJHwSUOZt+lR/eFKVLNozjsa2sW7crv9ziHb/enLzrw=,tag:cApDBLM7AoqLsqoqU1mplA==,type:str]
        key: ENC[AES256_GCM,data:6FQTLtv6wAm172+ImCzJzNN9WP357uNDlO0TZABAyLoGqIY4HCUazibtQtg7PwQzVeY49Z4gnPXJhQF7xSf4g7RFu4PG8UVn+uWS3hhmB2Jwf7sRfYjQzQ4qlyoEJHuL8WL0ukmTEpFwhVVykBzWuzEMUAfuuJhYEBY4kDNTJDi0pBfyVu/0ZbdEzPk0lZSFFgdOUye5yl2flQ1TlQFkdkc2KiBoTQDXfTJ93a/IAvuhCYh//nFBr2ILZXdK3RDGXXh65lzZ35B9j0KNlgq8tf/SCMs4tHXJDeomtbejmbbPmB2kIg3Xo8faEzrwWb+eajnKHy29SSqivFz+Rz/7v09eo3oSbQqriKG/U4YwjFjF985hWgkGq+MysMg7EhHkd5IK5IGvd72QGIsvhqHGjA==,iv:Z+rLYysenZHBnSRZ2Rblt9BlGw4qyYNnwlRxeT26ki4=,tag:5R6B6c5Rq/Sth9UkLZwvSQ==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:7m+3antFFuFXrzqFivAWbTlcKgK+D0U7kEIMTL3iQLykPG9QrEAQNKhQDx5CtqYeEhclC7aY7ZF7EOkWSOoyrNk5CruDfDZS8QkjSPCnn+u9cEFHZBmkNEM66Z6GnuveAdXfl1oED2SxY3cOhHz0UkxMkSat+BecSJAeJRK59jGqqalVykLx2I8uAXt0GgEwSik9u1Cj+YXwET9kNSuOrg6zCscWMPfSXjhIbin7hAT/ascbxtBx/l+3iEpAo3koUq8YEyYJlDX8AU1xIlpF5Y4/hkEim67rk9on41mYMpguSzqF/t80EZmzEG8LtnNtaeR6gPpjGNZ3Cm3xVThTeHvBZDyFuX0Fr/36JiNFbWtQVLkeTUZKzdjPixD5ijRbZbux0AIzMOewj2AwtBjb8Q5w3Qv/qgmujj9R6HHubD0YQLcey9/Y8DsN0LHOHKAm/LTuqziGz/u2uqh6gqbKnFWqTqHernLZg307sankiALP5mYCYJwY9wq09LuzjGGEyNzzsRYs2zdXRc0mI2xxEgBBUHsaQJhSGKLyyJH4pffWs6YsRVZfrrUlyQt16RwGQwboEszmrzm5D2eFYj0DkZVDBYk+KWtuydU/k6eu/UcwRr8IH9klyH+FpieZwJK9osWegVFX6PYYfqxDSrJd8HgS43RoK4KtDVQ7WPoqT3514NLcKhSOW2U/khWmXxV70qVfP0EcvXT2ZC2tqBnwmdKDrMNYJfPHrYtJfrYceKApq8rMsVqoTbKjhWf4SYi9KRhEkO0rS9O18Ji3Q1hmrbsFH3K9UWiy4hsrEQ6gw8j3xQUAWAx78jJUr+rQ6ClVoTTn2dA3Y9PkahKUo/r119qig0D3GqhH/dUAOpTpZJtkkOKDzCFe5cn8UrbnIRfLDVxwgc5Rs/q8IYGfdrW+nuIdkZycHqPUSDwya6xmvcauE9atQsfkQg==,iv:Bx81JN+1ae6oFy5V6VOqTIOzSZGDL7CY3axXPU4bZ+8=,tag:uCcN1SyojXVwWqjFc4MbvQ==,type:str]
        key: ENC[AES256_GCM,data:wSTbHhyY86qgyW0KXVP+9UwWBlLqCCcWx5WkMgV76hX7Za/rQC15mB0ws0sMwwVHI8F7sEP+rh6VABBoICdLmpW5RKPai6TkWihiBVEN3aJNnTDamjmtDVKa+MRhYrm+1FLPwFMXtSC/AUcJ1fTnsE1YM5BszpRJKw5Bl82Q57ttzL3usZmkqvWE808gY8BaTg3f2+au17/E64ePzKsivHEzIgczGeBJX7BwAqVZY94+4+01tNY092nV8tF+lRgBetwd2pkauhlXwUY8j84C9GvbVYnj+WgIBsVw+yVmEdEztWKgBtPUaaa3QktEPg9R3/InAu32vCb4flIeAPdgOQZsPqbN2s3nNijOrKdKxriisLvQhHUBxyFcFRXKUR72P9hrkZgdWN2vUOnOotastg==,iv:JKiZ3IrFxWkZKCwumh4dQkL+eFaLN3wsRfEnKWm5Aqc=,tag:XxTldj4Fc2d5nXQZSGPLng==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:UrI0Vf0xoO9Fgv52TVcNQL0+K494bMQFmwVD0pRGDCc=,tag:FVSqSGEd8g3nukLNZTt/hQ==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.33.4
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - olabtsuvm.nite.name
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
                  # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
                  # authorizationConfig:
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: webhook # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: Deny
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         matchConditions:
                  #             - expression: has(request.resourceAttributes)
                  #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: in-cluster-authorizer # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: NoOpinion
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.33.4
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.33.4
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.33.4
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:ffZgUH8s2fvu2spIy+69jRx+iA4C7pSmMP57tr7U+QPUC46YX34GUJRjV2GCgERYWhAU+8lIbmFHd3wMiwyW9GlyTUGkNh4EleETpHZeu2dGRTtEg/c/anPKWpi0Qzs6sKOItD07LEzHj9WsuxXsgr5l/aMdlPTHxo2x3hpr9Zzv0KSiggTz2mg4X1Ot5qKVctynlKEA2RGgjkDb3k5vB2wkrx5g9yCBX/k8MJPq73N/aGL5k2nIKmssIEgJzaL0t/EjOSoV3PGC5lb/44b3Hxa//+e57fx5MIWbBmlDoB4St24vszBhWpMHylqIN6254dGhiPasKlbs7lv1oM0d3yUugW8t0lYkOQ9pYgj66AoZLbL9lTgxrYe8lavKKB91T+R3+WFot4y0o0O3tDOpNtqFx+FymwNpgrZmPaFsB5k5BD6j55ohGMfIDQXEdRxKYkovLFrqrqwe0L6iIqMC7Uvjook+qLAtgW9b8jBuzg44fpqCcoh9qHl36WMQRP8H3QBNzEuPAOpR2njnB/If7EQy8QXKHnatVlAjEsPIWC0G6/hRlnHKBfv2LrCm7v8Td+W3sQ/AG2smTQn+NTPUybIX3Un7klz6AThU/jNswfX698G2P+TAV0OXuJEkcjTlZdvfAH6oQzeFM2o0zSeIpL4qq+SUic3Q7AKPGRRE4g25R+zMaWicA62/5kg0LFrlp4/l4wYA8uAdb4QI3J6oXqpECbxOQqJJVId2Qfmk/Lo1w0wrcgfLXPRnPe8S3IIsIGOoR650TeieXTunLIcn4BHGry/k2KqXkDNlyMlsPzoLh+Xcx9tQfQoGs6fxPu/g/7BBLv5o9TXDoit0cXtp0ae1OmjJA9lMQkq4qKSVEkS5qm3KM4GOgXsHt1E4LOWFwbhoQtLqt52ztISpoFPpQBNSjB6ufQ50YBElh42TY1jjIyEyGhdYTyji8w/tZc/NBwlM3zsnlAStJ5Wn33XveK9QNOIurtpH3GKIj4hx27yQalIAVukWymsOSkj65oOla32EJQ==,iv:U/El0fA+qkXH0M5yW0YGVqgCBUaYTybJXNpUz6d6EMI=,tag:KYlQqITzHpQIJUI8zMUkmw==,type:str]
            key: ENC[AES256_GCM,data:DE5F7Zvu033gdYrfhDdF5yS+l1zqMnUE1zikp3TszgugzDRG/e/es0IoqdD7jF/lQ9x8DjelLqo6nQK9TYU9M33klD3/QmnHvNZkSSAhoj6tJWf/v4Z8paq0BLOZtMRgrUq84nDbBILLixZmvSv/48r1dTnYMpXaW/oVlHz05md8gVYgECOup8H46aToPoegnrWIlKuX3gazlQRyY/m1tP7cHwLVAvUR8O6ZHaZN0PuF+zIL1Io4lLPbS1XIz1SuEARI22gv0nQbrj2rltq04+SDCTSZlJJmv1l+G+tVxYPoHMGQLHqHhEYeywfFYd0ydS1rkAOyR62Lu5N7uTshUeGj0kFqrzHCw+SX+xQW6h8ytH1CJuSiEwK2+91zfgO/lBC7TepHBtr5bSVEl0jRBA==,iv:HxhZXFWIbZ0egO6Ay6nyUSkvVfDETui6wX5V5kZVfLU=,tag:3LDJwA5Oq7ejk9GgzCUoWw==,type:str]
            # # The container image used to create the etcd service.
            # image: gcr.io/etcd-development/etcd:v3.5.21
            # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
            # advertisedSubnets:
            #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
# # Decryption secret example (do not use in production!).
# aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
# # Core DNS specific configuration options.
# coreDNS:
#     image: registry.k8s.io/coredns/coredns:v1.12.1 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
# # Allows running workload on control-plane nodes.
# allowSchedulingOnControlPlanes: true
sops:
    age:
        - recipient: age16khheln7aqhe8atf8ggxvykdqspsqpwgq5yw3y7l9zn8ezf2zausll77wa
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBnNWpSaVE1SGc3YWw3R2NC
            U3ZSMWQ3dXFXM1dkb1Z4b1huZHIxOXkwejJvClZNM3lMdGZTODJjVHN5c1pJRDNt
            MFBMVVhsdm9nalNCTHdZNUxJa2hVeTAKLS0tIHRkRDAzVzRYbmxDN21lTkgvMnpI
            UHBVbDlpSHJUV3Y0WEVnblIya0JUK2sKZMj2W4MPGURyu+lyIqqB4TwNX97ZwYzw
            QeEY7feo8/y2Mc1UH2R52NcVVWgRwsIJReF1CORdm3p6cCe9X/Ea1w==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-08-28T12:54:51Z"
    mac: ENC[AES256_GCM,data:8dcKZXerfnCP07SipPWcAJFGCVi+pcYHaezFtmOFR5OFSFRRwzYMl+Zj4AwgSpE1z7eBNHA4rxUYAYNpbBHi3rMPPfX6obqtlNxeouMLNPvZumg3A6buEQ98ELB3+Ut1nB7KQvxBqQb93Zl5w1c4PDCkQ2NLHn24yYd2TOqjfyk=,iv:ZMXHw8fa+UsXF8a3eCiGdjUpXbN5hPGh8qnKGIUMAFY=,tag:R86LPYSRYaq54B7fc0sriQ==,type:str]
    encrypted_regex: ^(data|stringData|crt|secret|id|token|key|secretboxEncryptionSecret)$
    version: 3.10.2
